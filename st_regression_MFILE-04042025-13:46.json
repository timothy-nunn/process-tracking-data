{
    "meta": {
        "time": "13:46",
        "date": "04/04/2025 UTC",
        "title": "st_regression_MFILE",
        "commit_message": "Add plot_scans.py options for plotting percentages rather than absolutes \\(#3582\\) CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp added arguments for x and y axis percentages making use of mtick.PercentFormatter\\, also fixed the ticks labelsize to work with all plots CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp added new argument to allow varying ticklabel size CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp added argument allowing option for manually setting x and y max for axis conversion to perctentages CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp added range for x and y axes CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp fixes to stop using x_axis setting twice with twin axis and reusing x_axis_range percentage converter with multiple primary variables CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp fix to taking absolute of list and which axis was called for formatting CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp seperated the y axes \\(twinned from original\\) in terms of percentages\\, maximums and range CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp removed print statements\\, replaced print error with a raise valueerror and fixed plots not working for subsequent yv vars CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp changes to how max values are handled so that inputs from CLI are kept for each output variable CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp small fix to convert from str to float CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp remove print statements CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp fix for y max for twinned axis CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp better handling of converting max lists from string into floats CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp remove prints CITATION.cff CMakeLists.txt CODE_OF_CONDUCT.md CONTRIBUTING.md LICENSE.txt README.md cmake documentation examples mkdocs.yml process process-tracking-data process.egg-info requirements.txt requirements_dev.txt ruff.toml scripts setup.py source tests tracking valgrind-python.supp Set the Y axis range on the correct Y axis --------- Co-authored-by: Timothy Nunn \\<timothy.nunn@ukaea.uk\\> ",
        "commit_hash": "b7ec7b1c503eabfec87c2dbf1bafd7394a69b0ce"
    },
    "tracking": {
        "pinjmw": 142.99464784390926,
        "aux_current_fraction": 0.07201493339217602,
        "zeff": 3.6468782358817613,
        "dr_blkt_inboard": 0.0,
        "triang": 0.5,
        "te": 11.819032367592818,
        "dr_tf_shld_gap": 0.01,
        "rminor": 2.5,
        "hfact": 1.2,
        "fusion_power": 2500.000000000002,
        "dr_shld_vv_gap_outboard": 0.9972190498481781,
        "dr_fw_inboard": 0.018000000000000002,
        "bmaxtf": 10.477042928040602,
        "dr_shld_inboard": 0.23902628144295743,
        "beta": 0.13135450902251428,
        "t_burn": 1000.0,
        "dr_cs_precomp": 0.0,
        "bt": 3.0,
        "vs_cs_pf_total_pulse": -89.0,
        "ne0": 1.8986523538716603e+20,
        "pdivt": 180.00000000000045,
        "a_plasma_surface": 810.4940458049573,
        "divlife": 0.9232713553186213,
        "neped": 1.2822998382331806e+19,
        "dr_bore": 0.22576065766172482,
        "p_plasma_inner_rad_mw": 268.34449289182743,
        "dr_fw_outboard": 0.018000000000000002,
        "bootstrap_current_fraction": 0.9,
        "pnetelmw": 2.517403725654276,
        "kappa95": 2.4999999999999996,
        "dr_shld_vv_gap_inboard": 0.01,
        "dr_tf_outboard": 0.9387516470126185,
        "nesep": 1.2822998382331806e+19,
        "te0": 25.927015552634337,
        "dr_fw_plasma_gap_inboard": 0.1,
        "pgrossmw": 1258.4628886825583,
        "etath": 0.4,
        "dene": 9.691806095962808e+19,
        "p_blkt_nuclear_heat_total_mw": 1407.2022611319733,
        "rmajor": 4.5,
        "pnucshld": 0.40322711549015683,
        "nd_impurities": 1.02606773965705e+17,
        "vol_plasma": 1312.7025860297895,
        "dr_blkt_outboard": 1.0,
        "q95": 5.840092374422214,
        "pheat": 0.0,
        "dr_shld_outboard": 0.3,
        "n_tf_coils": 12.0,
        "p_plasma_rad_mw": 442.4825515318506,
        "pflux_fw_neutron_mw": 2.264973117454746,
        "dr_fw_plasma_gap_outboard": 0.1,
        "dr_tf_inboard": 0.9387516470126185,
        "dr_cs": 0.19846141388269942,
        "p_plasma_loss_mw": 354.13805864002353,
        "triang95": 0.3333333333333333,
        "dr_shld_blkt_gap": 0.01,
        "t_energy_confinement": 2.541898286691828,
        "inductive_current_fraction": 1e-10,
        "concost": 6537.843463594616,
        "tesep": 0.125,
        "dr_cs_tf_gap": 0.0,
        "kappa": 2.8,
        "cdirt": 4272.215144701794,
        "f_nd_alpha_electron": 0.08851327321065852,
        "nd_ions_total": 8.34379808218007e+19,
        "teped": 4.5,
        "aspect": 1.8
    }
}